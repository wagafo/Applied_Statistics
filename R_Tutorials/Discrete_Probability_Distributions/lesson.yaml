- Class: meta
  Course: Applied Statistics
  Lesson: Discrete Probability Distributions
  Author: Walter Garcia-Fontes
  Type: Standard
  Organization: Universitat Pompeu Fabra
  Version: 1.0.0

- Class: text
  Output: R has different functions to work with discrete probability
    distributions. There are also add-on packages that provide
    additional functions and features. We will review in this tutorial
    some of the functions available in base R and some other available
    in specialized packages.

- Class: cmd_question
  Output: A discrete probability distribution is just the distribution
    of values for a variable that can only take discrete values, that
    is, it is given by these values and their relative
    frequency. Imagine for instance that we have data the returns of
    an investment, and that the values can go from 8 thousands (8) to
    12 thousands (12), that is possible returns can be 8, 9, 10, 11 or
    12 thousands. Define a vector with these values and assign it to
    an object called "val".
  CorrectAnswer: c(8,9,10,11,12)
  AnswerTests: any_of_exprs('val <- 8:12', 'val <- c(8,9,10,11,12)', 'val <- seq(8,12,1)')
  Hint: You have to define a vector that has the values 8, 9, 10,
      11, and 12, and assign it to "val", you can do it using
      different equivalent R expressions, such as "val <- c(8,9,10,11,12)",
      "val <- 8:12", or "val <- seq(8,12,1)".

- Class: cmd_question
  Output: Let's now create a vector called "probs" with the relative
    frequency for each possible return. The corresponding
    probabilities for 8, 9, 10, 11 and 12 thousands are 0.1, 0.2, 0.4, 0.2
    and 0.1. Create this vector now.
  CorrectAnswer: probs <- c(0.1, 0.2,0.4,0.2,0.1)
  AnswerTests: omnitest(correctExpr='probs <- c(0.1, 0.2,0.4,0.2,0.1)')
  Hint: You have to define a vector called "probs" with the
    corresponding probabilities, and you can do it with the command
    "probs <- c(0.1, 0.2, 0.4, 0.2, 0.1)".

- Class: cmd_question
  Output: We can now compute different statistics for the probability
    distribution of the "val" variable. For instance multiplying the
    vectors "val" and "prob" the distribution, and getting the sum of
    the resulting elements,  will give us the expectation (mean) of
    the distribution.  Do it now, without assigning the result to any 
    object.
  CorrectAnswer: 10
  AnswerTests: omnitest(correctVal = 10)
  Hint: You can enter, for instance, sum(val*probs).

- Class: text
  Output: There are some other more compact ways to define a
    probability distribution. For instance, the "distr" package can be
    used. We have loaded this package already for you.

- Class: cmd_question    
  Output:  With this package, we could enter the command
    "X <- DiscreteDistribution(supp=8:12, prob = c(0.1,0.2,0.4,0.2,0.1))"
    to define the same probability distribution than before. Try it now.
  Correctanswer: X <- DiscreteDistribution(supp=8:12, prob = c(0.1,0.2,0.4,0.2,0.1))
  AnswerTests: omnitest(correctExpr='X <- DiscreteDistribution(supp=8:12, prob = c(0.1,0.2,0.4,0.2,0.1))')
  Hint: You have to enter "X <- DiscreteDistribution(supp=8:12, prob = c(0.1,0.2,0.4,0.2,0.1))".




  

  
